@page "/stores/show"
@using API.Library.DataAccess
@using API.Library.Models
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids

<h3>Show Stores</h3>
<SfGrid DataSource="@Stores" AllowSorting="true" AllowPaging="true" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel", "Update" })" Height ="315">
    <GridEvents OnActionBegin="ActionBeginHandler" OnActionComplete="ActionCompleteHandler" TValue="StoreModel"></GridEvents>>
    <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>
    <GridColumns>
        <GridColumn Field=@nameof(StoreModel.id) IsPrimaryKey="true" Visible = "false" HeaderText="Store ID" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field=@nameof(StoreModel.name) HeaderText="Name" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field=@nameof(StoreModel.address) HeaderText="Address" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field=@nameof(StoreModel.city) HeaderText="City" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field=@nameof(StoreModel.postal_code) HeaderText="Postal Code" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field=@nameof(StoreModel.email) HeaderText="E-mail" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field=@nameof(StoreModel.mobile) HeaderText="Mobile" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field=@nameof(StoreModel.mobile2) HeaderText="Mobile 2" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field=@nameof(StoreModel.mobile3) HeaderText="Mobile 3" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field=@nameof(StoreModel.operating) HeaderText="Operating" Width="100" TextAlign="TextAlign.Center"></GridColumn>
    </GridColumns>
</SfGrid>
@code 
{
    public List<StoreModel> Stores = new List<StoreModel>();
     
    StoreData data = new StoreData();

    protected override void OnInitialized()
    {
        Stores = data.GetStores();
    }

    public void ActionBeginHandler(ActionEventArgs<StoreModel> Args)
    {
        if (Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            if (Args.Action == "Add")
            {
                data.SetStore<StoreModel>(Args.Data);

            }
            else
            {
                data.ChangeStoreById(Args.Data);
            }
        }
        if (Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Delete))
        {
            data.DeleteStoreById(Args.Data.id);
        }
    }

    public void ActionCompleteHandler(ActionEventArgs<StoreModel> Args)
    {
        if(Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            Stores = data.GetStores();
        }
    }
}
